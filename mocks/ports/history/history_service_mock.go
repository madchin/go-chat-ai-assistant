// Code generated by MockGen. DO NOT EDIT.
// Source: ./ports/services.go
//
// Generated by this command:
//
//	mockgen -source ./ports/services.go -destination ./mocks/ports/history/history_service_mock.go -exclude_interfaces ChatService -package mock_history_service
//

// Package mock_history_service is a generated GoMock package.
package mock_history_service

import (
	reflect "reflect"

	chat "github.com/madchin/go-chat-ai-assistant/domain/chat"
	gomock "go.uber.org/mock/gomock"
)

// MockHistoryService is a mock of HistoryService interface.
type MockHistoryService struct {
	ctrl     *gomock.Controller
	recorder *MockHistoryServiceMockRecorder
}

// MockHistoryServiceMockRecorder is the mock recorder for MockHistoryService.
type MockHistoryServiceMockRecorder struct {
	mock *MockHistoryService
}

// NewMockHistoryService creates a new mock instance.
func NewMockHistoryService(ctrl *gomock.Controller) *MockHistoryService {
	mock := &MockHistoryService{ctrl: ctrl}
	mock.recorder = &MockHistoryServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHistoryService) EXPECT() *MockHistoryServiceMockRecorder {
	return m.recorder
}

// RetrieveAllChatsHistory mocks base method.
func (m *MockHistoryService) RetrieveAllChatsHistory() (chat.ChatMessages, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RetrieveAllChatsHistory")
	ret0, _ := ret[0].(chat.ChatMessages)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RetrieveAllChatsHistory indicates an expected call of RetrieveAllChatsHistory.
func (mr *MockHistoryServiceMockRecorder) RetrieveAllChatsHistory() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RetrieveAllChatsHistory", reflect.TypeOf((*MockHistoryService)(nil).RetrieveAllChatsHistory))
}

// RetrieveAllChatsHistoryStream mocks base method.
func (m *MockHistoryService) RetrieveAllChatsHistoryStream(partialResponseCh chan<- chat.ChatMessages) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RetrieveAllChatsHistoryStream", partialResponseCh)
	ret0, _ := ret[0].(error)
	return ret0
}

// RetrieveAllChatsHistoryStream indicates an expected call of RetrieveAllChatsHistoryStream.
func (mr *MockHistoryServiceMockRecorder) RetrieveAllChatsHistoryStream(partialResponseCh any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RetrieveAllChatsHistoryStream", reflect.TypeOf((*MockHistoryService)(nil).RetrieveAllChatsHistoryStream), partialResponseCh)
}
