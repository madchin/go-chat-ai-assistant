// Code generated by MockGen. DO NOT EDIT.
// Source: ./domain/chat/repository.go
//
// Generated by this command:
//
//	mockgen -source ./domain/chat/repository.go -destination ./mocks/adapters/repository/history/history_mock.go -package mock_history -exclude_interfaces Repository
//

// Package mock_history is a generated GoMock package.
package mock_history

import (
	reflect "reflect"

	chat "github.com/madchin/go-chat-ai-assistant/domain/chat"
	gomock "go.uber.org/mock/gomock"
)

// MockHistoryRepository is a mock of HistoryRepository interface.
type MockHistoryRepository struct {
	ctrl     *gomock.Controller
	recorder *MockHistoryRepositoryMockRecorder
}

// MockHistoryRepositoryMockRecorder is the mock recorder for MockHistoryRepository.
type MockHistoryRepositoryMockRecorder struct {
	mock *MockHistoryRepository
}

// NewMockHistoryRepository creates a new mock instance.
func NewMockHistoryRepository(ctrl *gomock.Controller) *MockHistoryRepository {
	mock := &MockHistoryRepository{ctrl: ctrl}
	mock.recorder = &MockHistoryRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHistoryRepository) EXPECT() *MockHistoryRepositoryMockRecorder {
	return m.recorder
}

// RetrieveAllChatsHistory mocks base method.
func (m *MockHistoryRepository) RetrieveAllChatsHistory(responseCh chan<- chat.ChatMessages) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RetrieveAllChatsHistory", responseCh)
	ret0, _ := ret[0].(error)
	return ret0
}

// RetrieveAllChatsHistory indicates an expected call of RetrieveAllChatsHistory.
func (mr *MockHistoryRepositoryMockRecorder) RetrieveAllChatsHistory(responseCh any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RetrieveAllChatsHistory", reflect.TypeOf((*MockHistoryRepository)(nil).RetrieveAllChatsHistory), responseCh)
}

// SaveHistory mocks base method.
func (m *MockHistoryRepository) SaveHistory(arg0 chat.ChatMessages) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveHistory", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveHistory indicates an expected call of SaveHistory.
func (mr *MockHistoryRepositoryMockRecorder) SaveHistory(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveHistory", reflect.TypeOf((*MockHistoryRepository)(nil).SaveHistory), arg0)
}
